apiVersion: v1
kind: Template
metadata:
  name: covid-monitor-gach
  annotations:
    description: "A monitor for COVID pandemic Reproduction rate (R)"
    tags: "DataScience, R"

labels:
   app: ${APP_NAME}

parameters:
  - description: Application name
    displayName: Application name
    name: APP_NAME
    value: covid-monitor
    required: true
  - description: Application Host
    displayName: Application Host
    name: APP_HOST
  - description: Application code repository
    displayName: Application code repository
    name: GIT_SOURCE
    value: https://github.com/aferragu/covid-r-monitor.git
    required: true

objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
  spec:
    ports:
    - name: tcp-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${APP_NAME}
  spec:
    host: ${APP_HOST}
    port:
      targetPort: tcp-8080
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
  status:

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          image: ${APP_NAME}
          imagePullPolicy: Always
          name: ${APP_NAME}
          resources: {}
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
  status:

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}
  spec:
  status:
    dockerImageRepository: ""

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${APP_NAME}
  spec:
    failedBuildsHistoryLimit: 3
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      git:
        uri: ${GIT_SOURCE}
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile-OKD
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers: []
  status:
